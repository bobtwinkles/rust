warning: not reporting region error due to -Znll
  --> $DIR/escape-argument-callee.rs:36:50
   |
LL |         let mut closure = expect_sig(|p, y| *p = y);
   |                                                  ^

error[E0999]: The region for the argument `y` does not outlive the region for the argument `p`. Required due to this expression:
  --> $DIR/escape-argument-callee.rs:36:45
   |
LL |         let mut closure = expect_sig(|p, y| *p = y);
   |                                             ^^^^^^
   |
note: the too-short region is created here
  --> $DIR/escape-argument-callee.rs:36:42
   |
LL |         let mut closure = expect_sig(|p, y| *p = y);
   |                                          ^
note: the region to be outlived is created here
  --> $DIR/escape-argument-callee.rs:36:39
   |
LL |         let mut closure = expect_sig(|p, y| *p = y);
   |                                       ^

note: No external requirements
  --> $DIR/escape-argument-callee.rs:36:38
   |
LL |         let mut closure = expect_sig(|p, y| *p = y);
   |                                      ^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0/1:9 ~ escape_argument_callee[317d]::test[0]::{{closure}}[0]) with closure substs [
               i16,
               for<'r, 's, 't0> extern "rust-call" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) i32))
           ]

note: No external requirements
  --> $DIR/escape-argument-callee.rs:30:1
   |
LL | / fn test() {
LL | |     let x = 44;
LL | |     let mut p = &x;
LL | |
...  |
LL | |     deref(p);
LL | | }
   | |_^
   |
   = note: defining type: DefId(0/0:3 ~ escape_argument_callee[317d]::test[0]) with substs []

error: aborting due to previous error

For more information about this error, try `rustc --explain E0999`.
